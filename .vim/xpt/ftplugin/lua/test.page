


    --  -------------"--------------- 
    -- "`wrapped^"                    



"WRAPPED_TEXT"

"WRAPPED_TEXT" =

- "WRAPPED_TEXT" =

- "WRAPPED_TEXT"


    --  -------------'--------------- 
    -- '`wrapped^'                    



'WRAPPED_TEXT'

'WRAPPED_TEXT' =

- 'WRAPPED_TEXT' =

- 'WRAPPED_TEXT'


    --  -------------(--------------- 
    -- (`wrapped^)                    



(WRAPPED_TEXT)

(WRAPPED_TEXT) =

- (WRAPPED_TEXT) =

- (WRAPPED_TEXT)


    --  -------------<--------------- 
    -- <`wrapped^>                    



<WRAPPED_TEXT>

<WRAPPED_TEXT> =

- <WRAPPED_TEXT> =

- <WRAPPED_TEXT>


    --  -------------Author--------------- 
    -- `$author^                           



    drdr.xp

    drdr.xp =

    - drdr.xp =

    - drdr.xp


    --  -------------Email--------------- 
    -- `$email^                           



    drdr.xp@gmail.com

    drdr.xp@gmail.com =

    - drdr.xp@gmail.com =

    - drdr.xp@gmail.com


    --  -------------File--------------- 
    -- `file()^                          



    test.page

    test.page =

    - test.page =

    - test.page


    --  -------------[--------------- 
    -- [`wrapped^]                    



[WRAPPED_TEXT]

[WRAPPED_TEXT] =

- [WRAPPED_TEXT] =

- [WRAPPED_TEXT]


    --  -------------`--------------- 
    -- \``wrapped^\`                  



`WRAPPED_TEXT`

`WRAPPED_TEXT` =

- `WRAPPED_TEXT` =

- `WRAPPED_TEXT`


    --  -------------comment--------------- 
    -- `$CS^ `cursor^                       



    -- 
    --
    --  =
    --
    - --  =

    - -- 


    --  -------------commentBlock--------------- 
    -- `$CS^ `cursor^                            
    -- `$CS^                                     



    -- 
    --
    --
    -- 
    -- =
    --
    - -- 
    -- =
    --
    - -- 
    --
    --

    --  -------------commentDoc--------------- 
    -- `$CS^                                   
    -- `$CS^ `cursor^                          
    -- `$CS^                                   



    --
    -- 
    --
    --
    --
    -- 
    -- =
    --
    - --
    -- 
    -- =
    --
    - --
    -- 
    --
    --

    --  -------------commentLine--------------- 
    -- `$CS^ `cursor^                           



    -- 
    --
    --  =
    --
    - --  =

    - -- 


    --  -------------commentLine_--------------- 
    -- `$CS^ `wrapped^                           



-- WRAPPED_TEXT
--
-- WRAPPED_TEXT =
--
- -- WRAPPED_TEXT =

- -- WRAPPED_TEXT


    --  -------------comment_--------------- 
    -- `$CS^ `wrapped^                       



-- WRAPPED_TEXT
--
-- WRAPPED_TEXT =
--
- -- WRAPPED_TEXT =

- -- WRAPPED_TEXT


    --  -------------do--------------- 
    -- do                              
    --     `cursor^                    
    -- end                             



    do
        
    end

    do
        
    end =

    - do
        
    end =

    - do
        
    end


    --  -------------fn--------------- 
    -- function (`arg?^) `cursor^ end  



    function ()  end

    function (arg_TYPED, arg_TYPED)  end =

    - function ()  end =

    - function ()  end


    --  -------------for---------------   
    -- for `var^ = `0^, `10^`, `step?^ do 
    --     `cursor^                       
    -- end                                



    for var = 0, 10 do
        
    end

    for var_TYPED = 0_TYPED, 10_TYPED, step_TYPED do
        
    end =

    - for var = 0, 10 do
        
    end =

    - for var = 0, 10 do
        
    end


    --  -------------forin--------------- 
    -- for `var?^ in `expr^ do            
    --     `cursor^                       
    -- end                                



    for  in expr do
        
    end

    for var_TYPED, var_TYPED in expr_TYPED do
        
    end =

    - for  in expr do
        
    end =

    - for  in expr do
        
    end


    --  -------------forip---------------       
    -- for `key^, `value^ in ipairs(`table^) do 
    --     `cursor^                             
    -- end                                      



    for key, value in ipairs(table) do
        
    end

    for key_TYPED, value_TYPED in ipairs(table_TYPED) do
        
    end =

    - for key, value in ipairs(table) do
        
    end =

    - for key, value in ipairs(table) do
        
    end


    --  -------------forp---------------       
    -- for `key^, `value^ in pairs(`table^) do 
    --     `cursor^                            
    -- end                                     



    for key, value in pairs(table) do
        
    end

    for key_TYPED, value_TYPED in pairs(table_TYPED) do
        
    end =

    - for key, value in pairs(table) do
        
    end =

    - for key, value in pairs(table) do
        
    end


    --  -------------fun--------------- 
    -- function `name^(`arg?^)          
    --     `cursor^                     
    -- end                              



    function name()
        
    end

    function name_TYPED(arg_TYPED, arg_TYPED)
        
    end =

    - function name()
        
    end =

    - function name()
        
    end


    --  -------------if--------------- 
    -- if `cond^ then                  
    --     `cursor^                    
    -- end                             



    if cond then
        
    end

    if cond_TYPED then
        
    end =

    - if cond then
        
    end =

    - if cond then
        
    end


    --  -------------ife--------------- 
    -- if `cond^ then                   
    --     `job^                        
    -- else                             
    --     `cursor^                     
    -- end                              



    if cond then
        -- job
    else
        
    end

    if cond_TYPED then
        job_TYPED
    else
        
    end =

    - if cond then
        -- job
    else
        
    end =

    - if cond then
        -- job
    else
        
    end


    --  -------------ifei--------------- 
    -- if `cond^ then                    
    --     `^                            
    -- elseif `condn^ then               
    -- `^`                               
    -- `elseif...^`                      
    -- `else...^                         
    -- end                               



    if cond then
        
    elseif condn then
    
    elseif condn then
    
    elseif condn then
    
    else
      
    end

    if cond_TYPED then
        _TYPED
    elseif condn_TYPED then
    _TYPED
    elseif_TYPED
    else_TYPED
    end =

    - if cond then
        
    elseif condn then
    
    elseif condn then
    
    elseif condn then
    
    else
      
    end =

    - if cond then
        
    elseif condn then
    
    elseif condn then
    
    elseif condn then
    
    else
      
    end


    --  -------------invoke_--------------- 
    -- `name^(`wrapped^)                    



name(WRAPPED_TEXT)

name_TYPED(WRAPPED_TEXT) =

- name(WRAPPED_TEXT) =

- name(WRAPPED_TEXT)


    --  -------------locf--------------- 
    -- local function `name^(`arg?^)     
    --     `cursor^                      
    -- end                               



    local function name()
        
    end

    local function name_TYPED(arg_TYPED, arg_TYPED)
        
    end =

    - local function name()
        
    end =

    - local function name()
        
    end


    --  -------------locv--------------- 
    -- local `var^ =                     



    local var = 

    local var_TYPED =  =

    - local var =  =

    - local var = 


    --  -------------p--------------- 
    -- print(`cursor^)                



    print()

    print() =

    - print() =

    - print()


    --  -------------repeat--------------- 
    -- repeat                              
    --     `cursor^                        
    -- until                               



    repeat
        
    until 

    repeat
        
    until  =

    - repeat
        
    until  =

    - repeat
        
    until 


    --  -------------while--------------- 
    -- while `cond^ do                    
    --     `cursor^                       
    -- end                                



    while cond do
        
    end

    while cond_TYPED do
        
    end =

    - while cond do
        
    end =

    - while cond do
        
    end


    --  -------------{--------------- 
    -- {`wrapped^}                    



{WRAPPED_TEXT}

{WRAPPED_TEXT} =

- {WRAPPED_TEXT} =

- {WRAPPED_TEXT}

