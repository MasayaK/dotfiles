#ifndef __FOOSCHEME_TOKEN_H__
#define __FOOSCHEME_TOKEN_H__

#include "gc_cpp.h"
#include <stdexcept>



typedef int TokenID;


class Token : public gc_cleanup {

public:

    Token(std::string s) :
        sval(s), id(0)   { }
    // Token(TokenID id_) :
    //     id(id_)          { }
    Token(TokenID id_, std::string s) :
        sval(s), id(id_) { }
    Token(TokenID id_, const char *s) :
        sval(s), id(id_) { }
    Token(TokenID id_, char c) :
        id(id_)
    {
        this->sval = std::string(2, c);
    }

    virtual ~Token() { }


    bool
    operator<(const Token token) const {
        return this->sval < token.sval;
    }


public:

    std::string sval;
    TokenID     id;

};




#endif
