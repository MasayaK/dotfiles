#include <iostream>
#include <cstdlib>
#include <utility>
#include <vector>


typedef std::vector<int>    VecInt;
VecInt prime;    // キャッシュ

const int MAX_COUNT = 10000;


bool
isPrime(int n) {

    const int END_N = n / 2;

    if (! prime.empty()) {
        for (VecInt::iterator it = prime.begin(); it != prime.end(); ++it) {
            if (n % *it == 0) {
                return false;
            }
        }
    }
    for (int i = 2; i <= END_N; ++i) {
        if (n % i == 0) {
            return false;
        }
    }

    // 素数を見つけたらキャッシュしておく
    prime.push_back(n);
    return true;
}


int
main(int argc, char *argv[]) {

    prime.reserve(MAX_COUNT);

    for (int i = 2; i < MAX_COUNT; ++i) {
        if (isPrime(i)) {
            std::cout << "found:" << i << std::endl;
        }
    }

    return EXIT_SUCCESS;
}
