#include <iostream>
#include <cstdlib>
#include <string>
#include <algorithm>
#include <utility>
#include <vector>


const int MAX_COUNT = 100;

typedef std::pair<int, std::string>     NumStr;
typedef std::vector<NumStr>             IntVec;

struct FizzBuzz {
    void
    operator()(NumStr& elt) {    // éQè∆Ç≈éÛÇØéÊÇÈ
        if (elt.first % 15 == 0) {
            elt.second = "FizzBuzz";
        } else if (elt.first % 5 == 0) {
            elt.second = "Buzz";
        } else if (elt.first % 3 == 0) {
            elt.second = "Fizz";
        }
    }
};

struct PrintAll {
    void
    operator()(NumStr& elt) {
        if (elt.second.empty()) {
            std::cout << elt.first << std::endl;
        } else {
            std::cout << elt.second << std::endl;
        }
    }
};


int
main(int argc, char *argv[]) {

    IntVec  vec;

    vec.reserve(MAX_COUNT);    // Ç±ÇÍÇÇµÇƒÇ®Ç≠Ç∆ë¨Ç≥Ç™ëSëRà·Ç§
    for (int i = 0; i < MAX_COUNT; i++)
        vec.push_back(NumStr(i + 1, ""));
    std::for_each(vec.begin(), vec.end(), FizzBuzz());

    std::cout << "-------------------------------" <<std::endl;
    std::cin.get();

    std::for_each(vec.begin(), vec.end(), PrintAll());


    return EXIT_SUCCESS;
}


