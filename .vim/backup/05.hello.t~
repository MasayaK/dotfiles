use Test::More qw(no_plan);
use Test::Output;

use Text::Tokenizer::Class;
use Perl6::Say;

my $parser = Text::Tokenizer::Class->new(parse_type => 'handler', _verbose => 1);
$parser->ignored_chars(',', qr/\s/);
$parser->set_string("Hello, World");
$parser->add_pattern(
    qr/\w/ => sub { print shift->step() }
);
stdout_is(
    sub { $parser->parse(post_stop_if_found => 1) },
    "Hello",
    "print Hello"
);
is($parser->tell_string(), 5, 'tell_string()');
stdout_is(
    sub { $parser->parse(post_stop_if_found => 1) },
    "World",
    "print World"
);



$parser->clear_all();
$parser->set_string("Hello, World");
$parser->add_pattern(
    qr/\w/ => sub { say shift->step() }
);
stdout_is(
    sub { $parser->parse() },
    "Hello\nWorld\n",
    'print "Hello\nWorld\n"'
);
