#!/usr/bin/env perl
use strict;
use warnings;
use utf8;

use Getopt::Long qw(:config auto_help gnu_compat);
use Perl6::Say;
use Pod::Usage;
use Data::Dumper;

use FindBin qw($Bin);
use lib "$Bin/lib";

use MyScheme;



### MAIN ###
STDOUT->autoflush(1);
STDERR->autoflush(1);

# my $interp = MyScheme->new(_verbose => 1, compile => 1);
my $interp = MyScheme->new();
my $result;
say "----------------------------";
$result = $interp->eval_from_string('(print (+ 1 1))');    # => 2
say Dumper($result);
say "----------------------------";
$result = $interp->eval_from_string('(print 2)');    # => 2
say $result;    # => #<undef>
say "----------------------------";
my @result = $interp->eval_from_string('(print (+ (* 3 3) (* 4 4))) (print (/ 2))');    # => 25, 0.5
say for @result;    # => #<undef> #<undef>

use Test::More qw(no_plan);
use Test::Output;

stdout_is(
    sub { $interp->eval_from_string('(print \'a "foo" \'b "bar")') },
    "afoobbar\n",
    'scm_func print'
);







### FUNCTIONS ###


