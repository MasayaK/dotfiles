
# vim:set ft=sh:

is_screen_running() {
    # tscreen also uses this varariable.
    [ ! -z "$WINDOW" ]
}
is_tmux_running() {
    [ ! -z "$TMUX" ]
}
is_screen_or_tmux_running() {
    is_screen_running || is_tmux_running
}
shell_has_started_interactively() {
    [ ! -z "$PS1" ]
}
resolve_alias() {
    cmd="$1"
    while type "$cmd" >/dev/null 2>/dev/null; do
        # "$cmd is aliased to \`$cmd'"
        cmd=$(type "$cmd" | sed 's/.*`\([^'"'"']\+\)'"'"'/\1/')
    done
    echo "$cmd"
}


if ! is_screen_or_tmux_running \
    && shell_has_started_interactively \
    && [ -z "$SSH_CLIENT" ] \
    && [ `id -u` -ne 0 ]
then
    # I like screen behavior.
    # and now screen project is more active than tscreen.
    # I tested tmux a bit, however,
    # I prefer screen's copy-mode(it is tmux term, though) behavior.
    for cmd in screen tscreen tmux; do
        cmd=$(resolve_alias "$cmd")
        if [ "$cmd" ]; then
            $cmd
            break
        fi
    done
fi
